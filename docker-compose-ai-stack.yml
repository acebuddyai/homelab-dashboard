version: "3.8"

services:
  # ============= Web UI =============
  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    container_name: web-ui
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      homelab:
        ipv4_address: 172.20.0.52
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============= Workflow Automation =============
  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: unless-stopped
    environment:
      TZ: ${TZ:-America/New_York}
      NODE_RED_CREDENTIAL_SECRET: ${NODE_RED_CREDENTIAL_SECRET:-your_credential_secret_here}
      NODE_RED_ENABLE_PROJECTS: "true"
      NODE_RED_ENABLE_SAFE_MODE: "false"
    ports:
      - "1880:1880"
    networks:
      homelab:
        ipv4_address: 172.20.0.61
    volumes:
      - node_red_data:/data
      - ./node-red/settings.js:/data/settings.js:ro
      - ./node-red/storage.js:/data/storage.js:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1880"]
      interval: 30s
      timeout: 10s
      retries: 3
    user: "1000:1000"

  # ============= Knowledge & Memory =============
  # Qdrant is already running as a separate service

  ai-redis:
    image: redis:7-alpine
    container_name: ai-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      homelab:
        ipv4_address: 172.20.0.57
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # ============= Search & Information =============
  # SearXNG is already running as a separate service

  # ============= API Gateway =============
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: unless-stopped
    environment:
      REDIS_URL: redis://ai-redis:6379
      REDIS_HOST: ai-redis
      REDIS_PORT: 6379
      QDRANT_URL: http://qdrant:6333
      OLLAMA_URL: http://ollama:11434
      NODE_RED_URL: http://node-red:1880
      SEARXNG_URL: http://searxng:8080
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      PORT: 3000
    ports:
      - "3000:3000"
    networks:
      homelab:
        ipv4_address: 172.20.0.70
    depends_on:
      - ai-redis
      - node-red
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============= AI/LLM Service =============
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      homelab:
        ipv4_address: 172.20.0.71
    # CPU-only configuration - no GPU required
    environment:
      OLLAMA_KEEP_ALIVE: 5m
      OLLAMA_NUM_PARALLEL: 2
      OLLAMA_MAX_LOADED_MODELS: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 12G
        reservations:
          cpus: "2"
          memory: 8G

  # ============= Vector Database =============
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
    networks:
      homelab:
        ipv4_address: 172.20.0.73
    environment:
      QDRANT_LOG_LEVEL: INFO

  # ============= Search Engine =============
  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    restart: unless-stopped
    volumes:
      - ./searxng:/etc/searxng:rw
    ports:
      - "8888:8080"
    networks:
      homelab:
        ipv4_address: 172.20.0.74
    environment:
      SEARXNG_BASE_URL: "http://localhost:8888/"
      SEARXNG_SECRET_KEY: ${SEARXNG_SECRET_KEY:-ultrasecretkey}

volumes:
  node_red_data:
  redis_data:
  ollama_data:
  qdrant_data:

networks:
  homelab:
    external: true
