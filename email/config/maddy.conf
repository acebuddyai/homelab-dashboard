# Maddy Mail Server Configuration
# For homelab use - adjust domain and hostnames as needed

# Server information
hostname $(env:MADDY_HOSTNAME)
primary_domain $(env:MADDY_DOMAIN)

# State & runtime directory
state_dir /data

# Logging
log syslog off
log stderr all

# TLS configuration (self-signed for local use)
tls self_signed

# Authentication rate limiting
auth_map email_localpart
auth_map email_normalize

table.chain local_rewrites {
    optional_step regexp "(.+)\+(.+)@(.+)" "$1@$3"
    optional_step static {
        entry postmaster postmaster@$(primary_domain)
    }
    optional_step suffix @$(primary_domain)
}

# Local storage & accounts
storage.imapsql local_mailboxes {
    driver sqlite3
    dsn /data/imapsql.db
}

# Authentication
auth.plain_separate local_authdb {
    backend imapsql
    store local_mailboxes
}

# User accounts table
table.imapsql local_users {
    store local_mailboxes
}

# SMTP endpoints
smtp tcp://0.0.0.0:25 {
    hostname $(hostname)
    tls self_signed

    source $(primary_domain) {
        deliver_to &local_delivery
    }

    default_source {
        reject
    }
}

# Submission endpoint (port 587)
submission tcp://0.0.0.0:587 {
    hostname $(hostname)
    tls self_signed

    auth &local_authdb

    source $(primary_domain) {
        check {
            authorize_sender {
                auth_normalizer email_localpart
                backend &local_authdb
            }
        }

        destination postmaster $(primary_domain) {
            deliver_to &local_delivery
        }

        destination $(primary_domain) {
            deliver_to &local_delivery
        }

        default_destination {
            deliver_to &remote_delivery
        }
    }

    default_source {
        reject
    }
}

# Submission with implicit TLS (port 465)
submissions tcp://0.0.0.0:465 {
    hostname $(hostname)
    tls self_signed

    auth &local_authdb

    source $(primary_domain) {
        check {
            authorize_sender {
                auth_normalizer email_localpart
                backend &local_authdb
            }
        }

        destination postmaster $(primary_domain) {
            deliver_to &local_delivery
        }

        destination $(primary_domain) {
            deliver_to &local_delivery
        }

        default_destination {
            deliver_to &remote_delivery
        }
    }

    default_source {
        reject
    }
}

# IMAP endpoints
imap tcp://0.0.0.0:143 {
    hostname $(hostname)
    tls self_signed

    auth &local_authdb
    storage &local_mailboxes
}

imaps tcp://0.0.0.0:993 {
    hostname $(hostname)
    tls self_signed

    auth &local_authdb
    storage &local_mailboxes
}

# Delivery targets
target.queue local_delivery {
    target_msg_scanned {
        targets {
            local_mailboxes
        }
    }
}

target.queue remote_delivery {
    target_msg_scanned {
        targets {
            smtp
        }
    }
}

target.msgpipeline target_msg_scanned {
    check {
        # Basic anti-spam checks
        require_matching_rdns
        require_mx_record
    }

    destination postmaster $(primary_domain) {
        deliver_to &local_mailboxes
    }

    destination $(primary_domain) {
        deliver_to &local_mailboxes
    }

    default_destination {
        reject 550 5.1.1 "User not found"
    }
}

# Outbound SMTP
target.smtp smtp {
    attempt_starttls yes
    require_tls no
    auth off

    targets tcp://25
}

# Local mailbox delivery
target.storage local_mailboxes {
    storage &local_mailboxes
}
